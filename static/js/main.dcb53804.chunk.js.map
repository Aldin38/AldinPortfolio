{"version":3,"sources":["serviceWorker.js","Navbar/Navbar.jsx","Body/body.jsx","modals/Projects.js","modals/About.js","modals/Contact.js","modals/Modals.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","className","onClick","this","props","click","clickPrj","href","clickContact","React","Component","Body","state","input","submit","Projects","About","Contact","Modals","modalState","display","handleClickAbout","bind","setState","handleClickProjects","handleClickContact","ariaHideApp","style","overlay","zIndex","position","top","left","right","bottom","backgroundColor","content","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","isOpen","shouldCloseOnOverlayClick","onRequestClose","ReactDOM","render","Helmet","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+UAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gCCcSC,G,6KA3BP,OACA,yBAAKC,UAAU,UACX,yBAAKA,UAAU,QAEX,4BACI,wBAAIA,UAAU,cACd,4BAAQA,UAAU,QAAQC,QAASC,KAAKC,MAAMC,OAA9C,UAEA,wBAAIJ,UAAU,cACd,4BAAQA,UAAU,WAAWC,QAASC,KAAKC,MAAME,UAAjD,aAEA,wBAAIL,UAAU,cACd,uBAAGM,KAAK,mCAAR,WAEA,wBAAIN,UAAU,cACd,4BAAQC,QAASC,KAAKC,MAAMI,cAA5B,aAIJ,yBAAKP,UAAU,oB,GArBVQ,IAAMC,YCwBZC,G,wDAtBX,WAAYP,GAAO,IAAD,8BACd,cAAMA,IACDQ,MAAQ,CACTC,MAAO,GACPC,OAAQ,IAJE,E,qDASZ,OACE,yBAAKb,UAAU,kBAGb,yBAAKA,UAAU,WACf,wBAAIA,UAAU,cAAd,iBACA,wBAAIA,UAAU,gBAAd,wB,GAhBKQ,IAAMC,Y,4CCQVK,MARf,WACI,OACA,yBAAKd,UAAU,oBACX,2CACA,6C,MCQOe,MAZf,WAEI,OACA,yBAAKf,UAAU,iBACX,wCACA,kS,MCQOgB,MAbf,WAEI,OACA,yBAAKhB,UAAU,mBACX,uCACA,4BACI,sCAAW,6BAAX,4BACA,6CAAkB,6BAAlB,wBC+EGiB,E,kDAjFX,WAAYd,GAAO,IAAD,8BACd,cAAMA,IACDQ,MAAQ,CACZO,YAAY,EACZC,QAAS,IAEb,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBANP,E,iEAUhBnB,KAAKoB,SAAS,CACZJ,YAAY,EACZC,QAAS,kBAAC,EAAD,U,4CAMXjB,KAAKoB,SAAS,CACZJ,YAAY,EACZC,QAAS,kBAAC,EAAD,U,yCAKTjB,KAAKoB,SAAS,CACVJ,YAAY,EACZC,QAAS,kBAAC,EAAD,U,+BAKN,IAAD,OAIV,OAEJ,yBAAKnB,UAAU,WACf,kBAAC,EAAD,CAAQI,MAAOF,KAAKkB,iBAAiBC,KAAKnB,MAAOG,SAAUH,KAAKqB,oBAAoBF,KAAKnB,MAAOK,aAAcL,KAAKsB,mBAAmBH,KAAKnB,QAC3I,kBAAC,IAAD,CAAOuB,aAAa,EAAQC,MAAO,CAC/BC,QAAS,CACPC,OAAQ,MACRC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,aAEnBC,QAAS,CACPP,OAAO,MACPC,SAAU,WACVC,IAAK,OACLC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRG,OAAQ,oBACRC,WAAY,UACZC,SAAU,OACVC,wBAAyB,QACzBC,aAAc,OACdC,QAAS,OACTC,QAAS,SAEVC,OAAQzC,KAAKS,MAAMO,WAAY0B,2BAA2B,EAAMC,eAAgB,kBAAM,EAAKvB,SAAS,CAACJ,YAAW,MAClH,6BACA,4BAAQjB,QAAS,kBAAM,EAAKqB,SAAS,CAACJ,YAAW,EAAMC,QAAQ,MAAMnB,UAAU,mBAA/E,KAEAE,KAAKS,MAAMQ,e,GAtEOX,IAAMC,W,QCE3BqC,IAASC,OACP,6BACE,kBAACC,EAAA,EAAD,KACJ,4DAEC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAECC,SAASC,eAAe,SPgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dcb53804.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport './Navbar.css'\r\n\r\nclass Navbar extends React.Component{\r\n    render(){\r\n        return (\r\n        <div className=\"Navbar\">\r\n            <div className=\"list\">\r\n                \r\n                <ul>\r\n                    <li className=\"list-links\">\r\n                    <button className=\"about\" onClick={this.props.click}>About</button>\r\n                    </li>\r\n                    <li className=\"list-links\">\r\n                    <button className=\"projects\" onClick={this.props.clickPrj}>Projects</button>\r\n                    </li>            \r\n                    <li className=\"list-links\">\r\n                    <a href=\"https://my.indeed.com/p/leq285w\">Resume</a>\r\n                    </li>\r\n                    <li className=\"list-links\">\r\n                    <button onClick={this.props.clickContact}>Contact</button>\r\n                    </li>\r\n                    \r\n                </ul>\r\n                <div className=\"underline\" />  \r\n            </div>\r\n                \r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport \"./body.css\";\r\n\r\n\r\nclass Body extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            input: '',\r\n            submit: ''\r\n   \r\n        }\r\n      }\r\n        render() {\r\n          return (\r\n            <div className=\"background-img\">\r\n         \r\n             \r\n              <div className=\"headers\">\r\n              <h1 className=\"mainHeader\">ALDIN  MIKARA</h1>\r\n              <h3 className=\"secondHeader\">Portfolio site</h3>\r\n              </div>\r\n            </div>\r\n          )\r\n        };\r\n    }\r\n  \r\nexport default Body;","import React from 'react';\r\nimport './Projects.css';\r\n\r\n\r\nfunction Projects(){    \r\n    return(\r\n    <div className=\"projects-content\">\r\n        <h2>My Projects</h2>\r\n        <p>Coming Soon!</p>\r\n    </div>\r\n    )\r\n}\r\nexport default Projects;","import React from 'react';\r\nimport './About.css';\r\n\r\n\r\nfunction About(){    \r\n\r\n    return(\r\n    <div className=\"about-content\">\r\n        <h2>About Me</h2>\r\n        <p>Hello I'm do graphic design and front end development. Skills that I've picked up Photoshop, \r\n            Illustrator, Premier Pro, HTML, CSS, Sass, Bootstrap, React, Redux, JavaScript, Node.js, \r\n            and soon much more!. Willing to improve and learn something new every day. </p>\r\n    </div>\r\n    )\r\n\r\n}\r\nexport default About;","import React from 'react';\r\nimport './Contact.css';\r\n\r\n\r\nfunction Contact(){    \r\n\r\n    return(\r\n    <div className=\"contact-content\">\r\n        <h2>Contact</h2>\r\n        <ul>\r\n            <li>E-mail:<br></br>aldin_mikara@hotmail.com</li>\r\n            <li>Phone number: <br></br>+387 060 307 6561</li>\r\n        </ul>\r\n    </div>\r\n    )\r\n\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport Modal from 'react-modal'\r\nimport './Modals.css';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Projects from './Projects';\r\nimport About from './About.js'\r\nimport Contact from './Contact';\r\n\r\nclass Modals extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n         modalState: false,\r\n         display: ''\r\n        }\r\n     this.handleClickAbout = this.handleClickAbout.bind(this)\r\n    }\r\n  \r\n    handleClickContact(){\r\n      this.setState({\r\n        modalState: true,\r\n        display: <Contact />\r\n      })\r\n   \r\n    }\r\n    \r\n    handleClickProjects(){\r\n      this.setState({\r\n        modalState: true,\r\n        display: <Projects/>\r\n      })\r\n    }\r\n\r\n    handleClickAbout(){\r\n        this.setState({\r\n            modalState: true,\r\n            display: <About />\r\n        })\r\n      }\r\n\r\n      \r\n    render()  {\r\n\r\n \r\n   \r\n    return(\r\n       \r\n<div className='wrapper'>\r\n<Navbar click={this.handleClickAbout.bind(this)} clickPrj={this.handleClickProjects.bind(this)} clickContact={this.handleClickContact.bind(this)}  />\r\n<Modal ariaHideApp={false}  style={{\r\n    overlay: {\r\n      zIndex: '502',\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'black 0.8'\r\n    },\r\n    content: {\r\n      zIndex:'500',\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      border: '#1A1818 solid 2px',\r\n      background: '#1A1818',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '10px',\r\n      outline: 'none',\r\n      padding: '20px'\r\n    }\r\n  }} isOpen={this.state.modalState} shouldCloseOnOverlayClick={true} onRequestClose={() => this.setState({modalState:false})}>\r\n   <div>\r\n   <button onClick={() => this.setState({modalState:false,display:''})} className=\"btn btn-default\">X</button>\r\n\r\n  {this.state.display}\r\n  \r\n  </div>\r\n</Modal>\r\n\r\n\r\n</div>\r\n\r\n    );  \r\n}\r\n\r\n}\r\nexport default Modals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Navbar from './Navbar/Navbar.jsx';\nimport Body from './Body/body.jsx';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Modals from './modals/Modals.js'\nimport { Helmet } from 'react-helmet'\n\nReactDOM.render(\n  <div>\n    <Helmet>\n<title>Aldin Mikara - Portfolio</title>\n</Helmet>\n <Navbar />\n <Body />\n <Modals />\n </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}